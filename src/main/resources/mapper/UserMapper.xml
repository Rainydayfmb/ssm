<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.springmvc.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="cn.springmvc.model.User" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="loginName" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="passWord" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="status" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="createdDate" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="userName" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>

  <sql id="Base_Column_List" >
    id, loginName, passWord, status, createdDate, userName
  </sql>

  <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_inf
    where id = #{id}
  </select>

  <select id="selectByLoginnameAndPassword" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from user_inf
    where loginName=#{loginName} AND passWord=#{passWord}
  </select>

  <select id="selectByPage" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from user_inf
    where
      1=1
    <if test="userName!=null">
      AND userName LIKE BINARY concat('%',#{userName},'%')
    </if>
    <if test="status!=null">
      AND status = #{status}
    </if>
  </select>

  <delete id="deleteById" parameterType="java.lang.Integer" >
    delete from user_inf
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="cn.springmvc.model.User" >
    insert into user_inf (id, loginName, passWord, 
      status, createdDate, userName
      )
    values (#{id,jdbcType=INTEGER}, #{loginname,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{createddate,jdbcType=TIMESTAMP}, #{username,jdbcType=VARCHAR}
      )
  </insert>

  <insert id="insertSelective" parameterType="cn.springmvc.model.User" >
    insert into user_inf
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="loginname != null" >
        loginName,
      </if>
      <if test="password != null" >
        passWord,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createddate != null" >
        createdDate,
      </if>
      <if test="username != null" >
        userName,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="loginname != null" >
        #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createddate != null" >
        #{createddate,jdbcType=TIMESTAMP},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="cn.springmvc.model.User" >
    update user_inf
    <set >
      <if test="loginname != null" >
        loginName = #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        passWord = #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createddate != null" >
        createdDate = #{createddate,jdbcType=TIMESTAMP},
      </if>
      <if test="username != null" >
        userName = #{username,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateUser" parameterType="cn.springmvc.model.User" >
    update user_inf
    set loginName = #{loginname,jdbcType=VARCHAR},
      passWord = #{password,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      createdDate = #{createddate,jdbcType=TIMESTAMP},
      userName = #{username,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>