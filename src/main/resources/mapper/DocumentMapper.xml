<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.springmvc.dao.DocumentMapper" >
  <resultMap id="BaseResultMap" type="cn.springmvc.model.Document" >
    <constructor >
      <idArg column="ID" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="TITLE" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="filename" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="REMARK" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="CREATE_DATE" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="USER_ID" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    ID, TITLE, filename, REMARK, CREATE_DATE, USER_ID
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from document_inf
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from document_inf
    where ID = #{id,jdbcType=INTEGER}
  </delete>

  <select id="selectByPage" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from document_inf
    where
    1=1
    <if test="fileName!=null">
      AND fileName LIKE BINARY concat('%',#{fileName},'%')
    </if>
  </select>

  <insert id="insert" parameterType="cn.springmvc.model.Document" >
    insert into document_inf (ID, TITLE, filename, 
      REMARK, CREATE_DATE, USER_ID
      )
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{filename,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{userId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.springmvc.model.Document" >
    insert into document_inf
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="title != null" >
        TITLE,
      </if>
      <if test="filename != null" >
        filename,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
      <if test="createDate != null" >
        CREATE_DATE,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="filename != null" >
        #{filename,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.springmvc.model.Document" >
    update document_inf
    <set >
      <if test="title != null" >
        TITLE = #{title,jdbcType=VARCHAR},
      </if>
      <if test="filename != null" >
        filename = #{filename,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.springmvc.model.Document" >
    update document_inf
    set TITLE = #{title,jdbcType=VARCHAR},
      filename = #{filename,jdbcType=VARCHAR},
      REMARK = #{remark,jdbcType=VARCHAR},
      CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      USER_ID = #{userId,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>